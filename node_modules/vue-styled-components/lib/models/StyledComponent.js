"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _css = _interopRequireDefault(require("../constructors/css"));

var _normalizeProps = _interopRequireDefault(require("../utils/normalizeProps"));

var _isVueComponent = _interopRequireDefault(require("../utils/isVueComponent"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default2 = function _default2(ComponentStyle) {
  var createStyledComponent = function createStyledComponent(target, rules, props) {
    var componentStyle = new ComponentStyle(rules);
    var currentProps = (0, _normalizeProps["default"])(props);
    var prevProps = (0, _normalizeProps["default"])(target.props);
    var StyledComponent = {
      inject: {
        $theme: {
          "default": function _default() {
            return function () {
              return {};
            };
          }
        }
      },
      props: _objectSpread({
        as: [String, Object],
        value: null
      }, currentProps, {}, prevProps),
      data: function data() {
        return {
          localValue: this.value
        };
      },
      render: function render(createElement) {
        var _this = this;

        var children = [];

        for (var slot in this.$slots) {
          if (slot === 'default') {
            children.push(this.$slots[slot]);
          } else {
            children.push(createElement('template', {
              slot: slot
            }, this.$slots[slot]));
          }
        }

        return createElement((0, _isVueComponent["default"])(target) ? target : this.$props.as || target, {
          "class": [this.generatedClassName],
          props: this.$props,
          domProps: {
            value: this.localValue
          },
          on: _objectSpread({}, this.$listeners, {
            input: function input(event) {
              if (event && event.target) {
                _this.localValue = event.target.value;
              }
            }
          }),
          scopedSlots: this.$scopedSlots
        }, children);
      },
      methods: {
        generateAndInjectStyles: function generateAndInjectStyles(componentProps) {
          return componentStyle.generateAndInjectStyles(componentProps);
        }
      },
      computed: {
        generatedClassName: function generatedClassName() {
          var componentProps = _objectSpread({
            theme: this.theme
          }, this.$props);

          return this.generateAndInjectStyles(componentProps);
        },
        theme: function theme() {
          return this.$theme();
        }
      },
      watch: {
        value: function value(newValue) {
          this.localValue = newValue;
        },
        localValue: function localValue() {
          this.$emit('input', this.localValue);
        }
      },
      extend: function extend(cssRules) {
        for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          interpolations[_key - 1] = arguments[_key];
        }

        var extendedRules = _css["default"].apply(void 0, [cssRules].concat(interpolations));

        return createStyledComponent(target, rules.concat(extendedRules), props);
      },
      withComponent: function withComponent(newTarget) {
        return createStyledComponent(newTarget, rules, props);
      }
    };
    return StyledComponent;
  };

  return createStyledComponent;
};

exports["default"] = _default2;
module.exports = exports.default;